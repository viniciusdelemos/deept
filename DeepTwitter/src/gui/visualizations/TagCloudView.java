package gui.visualizations;

import java.awt.Color;
import java.awt.FlowLayout;
import java.awt.Font;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.util.Collection;
import java.util.Hashtable;
import java.util.List;

import javax.swing.JLabel;
import javax.swing.JPanel;

import model.JLabelTag;

import twitter4j.TwitterResponse;

import controller.TagCloudManager;

public class TagCloudView extends JPanel implements MouseListener{
	
	private TagCloudManager tagCloudManager;
	private Hashtable<String, JLabelTag> tags;
	private boolean finished = false;
	
	private static double maxSize = 40;
	private static double minSize = 20;
	
	public static int colorCategories = -16763956;
	public static int colorTrends = -13395457;
	public static int colorBoth = -39424;

	
    public TagCloudView(List<TwitterResponse> statusesList, boolean isGroup, String name) {
    	
        initComponents();

        tagCloudManager = new TagCloudManager(statusesList);
        
        init();
    }
    
    private void add(String name, int type, double normScore){
    	
    	JLabelTag jlabel1 = new JLabelTag(name);
    	jlabel1.setType(type);
    	jlabel1.setNormScore(normScore);
    	jlabel1.setScore(9);
    	tags.put(jlabel1.getName(), jlabel1);
    	
    }
    
    private void mountTags(){
    	
    	tags = new Hashtable<String, JLabelTag>();
    	
    	add("Apple", JLabelTag.typeBoth, 0.88);
    	
    	add("Twitter", JLabelTag.typeCategories, 0.7);
    	
    	add("Sushi", JLabelTag.typeCategories, 0.1);
    	
    	add("#musicmonday", JLabelTag.typeTrends, 0.4);
    	
    	add("facebook", JLabelTag.typeCategories, 0.0);
    	
    	add("Marvel", JLabelTag.typeBoth, 0.8);
    	
    	
    	
    	add("Obama", JLabelTag.typeCategories, 0.6);
    	
    	add("friends", JLabelTag.typeCategories, 0.9);
    	
    	add("Travel", JLabelTag.typeCategories, 0.1);
    	
    	add("Disney", JLabelTag.typeCategories, 0.4);
    	
    	add("#rememberwhen", JLabelTag.typeTrends, 0.5);
    	
    	add("photos", JLabelTag.typeCategories, 0.2);
    	
    	add("geek", JLabelTag.typeCategories, 0.3);
    	
    	add("PS3", JLabelTag.typeTrends, 0.6);
    	
    	add("feeling", JLabelTag.typeCategories, 0.4);
    	
    	add("Movie", JLabelTag.typeBoth, 0.8);
    	
    	add("Opera", JLabelTag.typeCategories, 0.1);
    	
    	add("iPhone", JLabelTag.typeBoth, 1);
    	

    }

    private void init(){

//        int numberTags = 50;
//
//        for(int i=0 ; i < numberTags ; i++){
//
//            JLabel label = new JLabel("Tag "+i);
//            label.setFont(new Font("Tahoma", 0 , i+10));
//            label.setForeground(new Color((int)(Math.random() * 256)));
//            label.setToolTipText("I'm Tag "+i);
//            label.addMouseListener(this);
//            add(label);
//
//        }
    	
    	
    	
    	new MakeCloud().start();
    	
    	while(finished == false){
    		try{
    			Thread.sleep(500);
    		}catch (Exception e) {
				// TODO: handle exception
			}
    	}

    	
    	
    	//mountTags();
    	
    	Collection<JLabelTag> jlabelTags = tags.values();
    	
    	int cont = 0;
    	for(JLabelTag j : jlabelTags){
    		cont++;
    		
    		j.setFont(new Font("Tahoma", 0 , (int)(interpolacaoLinear(0, 1, minSize, maxSize, j.getNormScore()))));
    		
    		if(j.getType() == JLabelTag.typeCategories){
    			j.setForeground(new Color(colorCategories));
    		}
    		else if(j.getType() == JLabelTag.typeTrends){
    			j.setForeground(new Color(colorTrends));
    		}
    		else j.setForeground(new Color(colorBoth));
    		
    		j.setToolTipText((int)j.getScore() + " ocurrence(s)");
    		//j.addMouseListener(l)
    		
    		add(j);
    		
    	}
    	
    	this.updateUI();
    	
    	System.out.println("Adicionou "+cont+ " tags");
    	
    }
    
    private double interpolacaoLinear(double a, double b, double fa, double fb, double x){
    	
		return ((b-x)*fa/(b-a)) + ((x-a)*fb/(b-a)); 
		
	}
    
    class MakeCloud extends Thread{
    	
    	public void run(){
    		
    		tags = tagCloudManager.makeTagCloud();
    		finished = true;
    		
    	}
    	
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents() {

        setLayout(new java.awt.FlowLayout(FlowLayout.CENTER, 20, 20));
    }// </editor-fold>

    public void mouseClicked(MouseEvent e) {
        System.out.println("Foi");
        
        if (e.getComponent() instanceof JLabel){
            JLabel label = (JLabel)e.getComponent();
            System.out.print("  " + label.getText());
        }


    }

    public void mousePressed(MouseEvent e) {

    }

    public void mouseReleased(MouseEvent e) {

    }

    public void mouseEntered(MouseEvent e) {

    }

    public void mouseExited(MouseEvent e) {
    }


}
